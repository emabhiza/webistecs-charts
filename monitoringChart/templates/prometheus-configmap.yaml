apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.prometheus.configMap.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    mylabel: {{ .Values.prometheus.configMap.labels.mylabel }}
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.prometheus.scrapeInterval }}

    scrape_configs:
      - job_name: '{{ .Values.prometheus.configMap.scrapeConfigs.coinmarketcapExporter }}'
        static_configs:
          - targets: ['{{ .Values.prometheus.configMap.scrapeConfigs.coinmarketcapExporterTarget }}']

      - job_name: '{{ .Values.prometheus.configMap.scrapeConfigs.websitecs }}'
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_mylabel]
            target_label: websitecs
        static_configs:
          - targets: ['192.168.68.107:30080']

      - job_name: 'websitecs-test'
        static_configs:
          - targets: ['192.168.68.107:30081']

      - job_name: '{{ .Values.prometheus.configMap.scrapeConfigs.nodeExporter }}'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
            action: keep
            regex: monitoring;node-exporter

      - job_name: 'kube-state-metrics'
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: kube-state-metrics

    remote_write:
      - url: "https://metric-api.eu.newrelic.com/prometheus/v1/write?prometheus_server={{ .Values.global.namespace }}"
        headers:
          api-key: "eu01xx247ce2ebb2d76b6041a8886cbdFFFFNRAL"
