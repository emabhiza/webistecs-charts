apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.prometheus.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.prometheus.labels.app }}
    component: {{ .Values.prometheus.labels.component }}
spec:

  replicas: {{ .Values.prometheus.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.prometheus.labels.app }}
      component: {{ .Values.prometheus.labels.component }}
  template:
    metadata:
      labels:
        app: {{ .Values.prometheus.labels.app }}
        component: {{ .Values.prometheus.labels.component }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "{{ .Values.prometheus.ports.containerPort }}"
    spec:
      nodeSelector:
        kubernetes.io/hostname: "k3s"
      securityContext:
          fsGroup: 65534
      initContainers:
        - name: volume-permission-fix
          image: busybox:1.35
          command: [ "sh", "-c", "mkdir -p /prometheus/data && chown -R 65534:65534 /prometheus/data" ]
          volumeMounts:
            - name: prometheus-data
              mountPath: /prometheus/data
      containers:
        - name: {{ .Values.prometheus.name }}
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          args:
            - "--config.file={{ .Values.prometheus.args.configFile }}"
            - "--storage.tsdb.retention.time={{ .Values.prometheus.args.retentionTime }}"
            - "--web.enable-admin-api"
          ports:
            - containerPort: {{ .Values.prometheus.ports.containerPort }}
          volumeMounts:
            - name: {{ .Values.prometheus.volumeMounts.config.name }}
              mountPath: {{ .Values.prometheus.volumeMounts.config.mountPath }}
            - name: {{ .Values.prometheus.volumeMounts.data.name }}
              mountPath: {{ .Values.prometheus.volumeMounts.data.mountPath }}
          resources:
            requests:
              memory: "{{ .Values.prometheus.resources.requests.memory }}"
              cpu: "{{ .Values.prometheus.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.prometheus.resources.limits.memory }}"
              cpu: "{{ .Values.prometheus.resources.limits.cpu }}"
      volumes:
        - name: {{ .Values.prometheus.volumeMounts.data.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.prometheus.pvc.name }}
        - name: {{ .Values.prometheus.volumeMounts.config.name }}
          configMap:
            name: {{ .Values.prometheus.configMap.name }}
