apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.elasticsearch.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.elasticsearch.name }}
spec:
  replicas: {{ .Values.elasticsearch.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.elasticsearch.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.elasticsearch.name }}
    spec:
      containers:
        - name: {{ .Values.elasticsearch.name }}
          image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
          startupProbe:
            httpGet:
              path: /
              port: 9200
            failureThreshold: 30
            periodSeconds: 10

          env:
            - name: discovery.type
              value: {{ .Values.elasticsearch.env.discoveryType | quote }}
            - name: xpack.security.enabled
              value: {{ .Values.elasticsearch.env.securityEnabled | quote }}
            - name: ES_JAVA_OPTS
              value: {{ .Values.elasticsearch.env.javaOpts | quote }}
          ports:
            - containerPort: {{ .Values.elasticsearch.ports.http.containerPort }}
            - containerPort: {{ .Values.elasticsearch.ports.transport.containerPort }}
          volumeMounts:
            - name: {{ .Values.elasticsearch.volumeMount.name }}
              mountPath: {{ .Values.elasticsearch.volumeMount.mountPath }}
          resources:
            requests:
              memory: "{{ .Values.elasticsearch.resources.requests.memory }}"
              cpu: "{{ .Values.elasticsearch.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.elasticsearch.resources.limits.memory }}"
              cpu: "{{ .Values.elasticsearch.resources.limits.cpu }}"
      volumes:
        - name: {{ .Values.elasticsearch.volumeMount.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.elasticsearch.pvc.name }}
