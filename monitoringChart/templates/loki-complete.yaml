---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: monitoring
data:
  loki.yaml: |
    auth_enabled: false
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095

    ingester:
      wal:
        dir: /var/loki/wal
      lifecycler:
        address: 0.0.0.0
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 1h
      max_chunk_age: 1h
      chunk_target_size: 1048576  # 1MB
      chunk_retain_period: 30s

    schema_config:
      configs:
        - from: "2023-01-01"
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: index_
            period: 24h

    storage_config:
      tsdb:
        directory: /var/loki/tsdb
      filesystem:
        directory: /var/loki/chunks

    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h  # 7 days
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32
      max_entries_limit_per_query: 5000
      max_query_series: 1000

    compactor:
      working_directory: /var/loki/compactor
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 10

    table_manager:
      retention_deletes_enabled: true
      retention_period: 168h  # 7 days

    query_range:
      align_queries_with_step: true
      max_retries: 5
      cache_results: false

    frontend:
      log_queries_longer_than: 5s
      max_outstanding_per_tenant: 100

    querier:
      query_ingesters_within: 3h

    ruler:
      storage:
        type: local
        local:
          directory: /var/loki/rules
      rule_path: /var/loki/rules-temp
      alertmanager_url: http://localhost:9093
      ring:
        kvstore:
          store: inmemory
      enable_api: true

    analytics:
      reporting_enabled: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.9.0
          args:
            - "-config.file=/etc/loki/loki.yaml"
          ports:
            - containerPort: 3100
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki
            - name: loki-storage
              mountPath: /var/loki
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
        - name: loki-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  ports:
    - port: 3100
      targetPort: 3100
  selector:
    app: loki
