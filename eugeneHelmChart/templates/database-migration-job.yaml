apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-db-migration"
  annotations:
    argocd.argoproj.io/hook: "{{ .Values.dbMigrationJob.annotations.argocd.hook }}"
    argocd.argoproj.io/hook-weight: "{{ .Values.dbMigrationJob.annotations.argocd.hookWeight }}"
    argocd.argoproj.io/hook-delete-policy: "{{ .Values.dbMigrationJob.annotations.argocd.hookDeletePolicy }}"
    checksum/config: "{{ printf "%s:%s" .Values.webistecs.image.repository .Values.webistecs.image.tag | sha256sum }}"

spec:
  template:
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: db-migration
          image: "{{ .Values.webistecs.image.repository }}:{{ .Values.webistecs.image.tag }}"
          command: [ "./run.migration.sh" ]
          imagePullPolicy: Always
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "{{ .Values.dbMigrationJob.environment.aspNetCoreEnvironment }}"
            - name: ConnectionStrings__WebistecsContext
              value: "{{ .Values.dbMigrationJob.environment.webistecsContext }}"
          resources:
            requests:
              memory: "{{ .Values.dbMigrationJob.resources.requests.memory }}"
              cpu: "{{ .Values.dbMigrationJob.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.dbMigrationJob.resources.limits.memory }}"
              cpu: "{{ .Values.dbMigrationJob.resources.limits.cpu }}"
          volumeMounts:
            - name: db-storage
              mountPath: /db
      imagePullSecrets:
        - name: {{ .Values.webistecs.imagePullSecret }}
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: webistecs-db-pvc
      restartPolicy: Never