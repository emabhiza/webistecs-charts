# values.yaml
webistecs:
  nameOverride: "webistecs"
  replicaCount: 1
  containerName: "my-container"
  image:
    repository: docker.io/emabhiza/webistecs
    tag: 1
  environment:
    aspNetCoreEnvironment: Production
    # Updated connection string:
    webistecsContext: "Data Source=/db/webistecs.db"
  imagePullPolicy: "Always"
  containerPort: 80
  readinessProbe:
    path: "/healthz"
    port: 8080
    initialDelaySeconds: 5
    periodSeconds: 10
  secrets:
    coingeckoApiKey: "coingecko_apiKey"
    coinbaseApiKey: "cb_apiKey"
    coinbaseApiSecret: "cb_apiSecret"
    krakenPublicKey: "kraken_publicKey"
    krakenPrivateKey: "kraken_privateKey"
    telegramBotToken: "telegram_botToken"
    telegramChatId: "telegram_chatId"
    webistecsSecret: "webistecs-secret"
  databasePath: "/db/webistecs.db"
  volumeMountPath: "/db"
  service:
    nodePortHttp: 30080
  restartPolicy: "Always"
  imagePullSecret: "myregistrykey"
  volume:
    persistentVolumeClaim:
      claimName: "webistecs-db-pvc"
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  logging:
    enabled: "true"
    module: "docker"
    fileset:
      stdout: "true"

nodeExporter:
  name: "node-exporter"
  image: "prom/node-exporter:latest"
  containerPort: 9100


dbMigrationJob:
  image:
    repository: emabhiza/webistecs-migrations
    tag: 1
  environment:
    aspNetCoreEnvironment: Production
    webistecsContext: "Data Source=/db/webistecs.db"
  volumes:
    - name: db-storage
      persistentVolumeClaim:
        claimName: webistecs-db-pvc
  annotations:
    argocd:
      hook: PreSync
      hookWeight: "5"
      hookDeletePolicy: "BeforeHookCreation,HookSucceeded"
  resources:
    requests:
      memory: "1Gi"
      cpu: "1000m"
    limits:
      memory: "1Gi"
      cpu: "1000m"


alertmanager:
  enabled: false

prometheus:
  pushgateway:
    enabled: false
  server:
    enabled: true

  nodeExporter:
    enabled: true

kubeStateMetrics:
  enabled: false
