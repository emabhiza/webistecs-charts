apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgresql.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "postgresql.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "postgresql.name" . }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database }}
            - name: PGDATA
              value: /pgdata/data
            # Critical security additions (NEW)
            - name: POSTGRES_INITDB_ARGS
              value: "--auth-host=scram-sha-256 --no-postgres-role"
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "scram-sha-256"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /pgdata
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.user }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.user }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: {{ include "postgresql.fullname" . }}-pvc