on:
  workflow_dispatch:
    inputs:
      trigger_action:
        description: 'Manually trigger ArgoCD sync'
        required: false
        default: 'false'

jobs:
  deploy:
    runs-on: [self-hosted, linux, arm64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install ArgoCD CLI
        run: |
          echo "Installing ArgoCD CLI..."
          mkdir -p $HOME/bin
          curl -sSL -o $HOME/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.14.4/argocd-linux-arm64
          chmod +x $HOME/bin/argocd
          echo "ArgoCD CLI installed."
          echo "Adding $HOME/bin to PATH"
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Debug - Get Latest Docker Image Tag
        id: get_image_tag
        run: |
          echo "Checking for the latest Docker image tag..."
          latest_tag=$(curl -s https://hub.docker.com/v2/repositories/emabhiza/webistecs/tags/ | jq -r '.results[0].name')
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "Docker image tag fetched: $latest_tag"

      - name: Send Telegram Message - Deployment Started
        run: |
          START_TIME=$(date +%s)
          echo "START_TIME=$START_TIME" >> $GITHUB_ENV

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM__TOKEN }}/sendMessage" \
          -H "Content-Type: application/json" \
          -d '{
            "chat_id": "'${{ secrets.TELEGRAM__CHATID }}'",
            "parse_mode": "HTML",
            "text": "🚀 <b>Deployment Started!</b>\n👤 <b>Triggered by:</b> '${{ github.actor }}'\n🏷️ <b>Target Version:</b> '${{ env.latest_tag }}'\n⏳ <b>Status:</b> In Progress..."
          }'

      - name: Update Helm Chart with Latest Docker Tag
        run: |
          echo "Updating values.yaml with new image tag..."
          sed -i 's/tag: .*/tag: "${{ env.latest_tag }}"/' webistecs/values.yaml
          echo "Updated values.yaml"

      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add webistecs/values.yaml
          git commit -m "Update image tag to ${{ env.latest_tag }}"
          git push

      - name: Force Sync ArgoCD and Check for Failure
        id: argocd_sync
        continue-on-error: true
        run: |
          echo "Forcing ArgoCD sync..."
          if ! argocd app sync --force webistecs; then
            echo "sync_failed=true" >> $GITHUB_ENV
            exit 1
          fi
          echo "sync_failed=false" >> $GITHUB_ENV

      - name: Send Telegram Message - Deployment Status
        run: |
          END_TIME=$(date +%s)
          DEPLOY_TIME=$((END_TIME - $START_TIME))

          if [[ "${{ env.sync_failed }}" == "true" ]]; then
            STATUS="❌ <b>Deployment Failed!</b>\n🔄 <b>Rolled Back to:</b> '${{ env.old_tag }}'\n🚨 <b>Status:</b> Rollback Complete"
          else
            STATUS="✅ <b>Deployment Successful!</b>\n🏷️ <b>Version:</b> '${{ env.latest_tag }}'\n⏳ <b>Deployment Time:</b> '${DEPLOY_TIME}' sec\n🚀 <b>Status:</b> Success!"
          fi

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM__TOKEN }}/sendMessage" \
          -H "Content-Type: application/json" \
          -d '{
            "chat_id": "'${{ secrets.TELEGRAM__CHATID }}'",
            "parse_mode": "HTML",
            "text": "'$STATUS'"
          }'

      - name: Debug - Store new image tag (update GitHub secret)
        if: env.sync_failed == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "Updating LATEST_TAG GitHub secret..."
          gh secret set LATEST_TAG --body="${{ env.latest_tag }}"
          echo "LATEST_TAG secret updated."
