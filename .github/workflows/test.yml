name: Deploy to ArgoCD

on:
  schedule:
    - cron: '*/2 * * * *'  # Every 2 minutes
  workflow_dispatch:
    inputs:
      trigger_action:
        description: 'Manually trigger ArgoCD sync'
        required: false
        default: 'false'

jobs:
  deploy:
    runs-on: [self-hosted, linux, arm64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install ArgoCD CLI
        run: |
          echo "Installing ArgoCD CLI..."
          mkdir -p $HOME/bin
          curl -sSL -o $HOME/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.14.4/argocd-linux-arm64
          chmod +x $HOME/bin/argocd
          echo "ArgoCD CLI installed."
          echo "Adding $HOME/bin to PATH"
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Debug - Show ArgoCD CLI version
        run: |
          echo "Checking ArgoCD CLI version..."
          argocd version --short
          echo "ArgoCD CLI version checked."

      - name: Install jq
        run: |
          echo "Installing jq for JSON parsing..."
          sudo apt-get update && sudo apt-get install -y jq
          echo "jq installed."

      - name: Debug - Log into ArgoCD
        run: |
          echo "Attempting ArgoCD login..."
           argocd login 192.168.68.107:30007 --username admin --password Gsquad238 --insecure
          echo "Logged into ArgoCD."

      - name: Debug - List ArgoCD Applications
        run: |
          echo "Listing ArgoCD applications..."
          argocd app list
          echo "ArgoCD application list displayed."

      - name: Debug - Get Latest Docker Image Tag
        id: get_image_tag
        run: |
          echo "Checking for the latest Docker image tag..."
          latest_tag=$(curl -s https://hub.docker.com/v2/repositories/emabhiza/webistecs/tags/ | jq -r '.results[0].name')
          echo "Latest Docker image tag is $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
          echo "Docker image tag checked."

      - name: Check if Docker image has changed
        id: image_changed
        run: |
          # Get previously stored tag from GitHub Secrets
          previous_tag="${{ secrets.LATEST_TAG }}"
          echo "Previous Docker image tag: $previous_tag"
          echo "Latest Docker image tag: ${{ steps.get_image_tag.outputs.latest_tag }}"
          if [[ -z "$previous_tag" || "$previous_tag" != "${{ steps.get_image_tag.outputs.latest_tag }}" ]]; then
            echo "Image has changed. Triggering ArgoCD deployment."
            echo "image_changed=true" >> $GITHUB_OUTPUT
          else
            echo "No change in image. Skipping ArgoCD deployment."
            echo "image_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Debug - Sync ArgoCD
        if: steps.image_changed.outputs.image_changed == 'true'
        run: |
          echo "Starting ArgoCD sync for 'webistecs'..."
          argocd app sync webistecs
          echo "ArgoCD sync complete."

      - name: Install GitHub CLI
        run: |
          echo "Installing GitHub CLI..."
          sudo apt-get update && sudo apt-get install -y gh
          echo "GitHub CLI installed."

      - name: Authenticate GitHub CLI
        run: |
          echo "Authenticating GitHub CLI..."
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          echo "GitHub CLI authenticated."

      - name: Debug - Store new image tag (update GitHub secret)
        if: steps.image_changed.outputs.image_changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Updating LATEST_TAG GitHub secret..."
          gh secret set LATEST_TAG --body="${{ steps.get_image_tag.outputs.latest_tag }}"
          echo "LATEST_TAG secret updated."
          
          
          